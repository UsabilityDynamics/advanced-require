/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['advanced-require.js']) {
  _$jscoverage['advanced-require.js'] = [];
  _$jscoverage['advanced-require.js'][12] = 0;
  _$jscoverage['advanced-require.js'][14] = 0;
  _$jscoverage['advanced-require.js'][17] = 0;
  _$jscoverage['advanced-require.js'][20] = 0;
  _$jscoverage['advanced-require.js'][22] = 0;
  _$jscoverage['advanced-require.js'][25] = 0;
  _$jscoverage['advanced-require.js'][28] = 0;
  _$jscoverage['advanced-require.js'][31] = 0;
  _$jscoverage['advanced-require.js'][34] = 0;
  _$jscoverage['advanced-require.js'][38] = 0;
  _$jscoverage['advanced-require.js'][43] = 0;
  _$jscoverage['advanced-require.js'][44] = 0;
  _$jscoverage['advanced-require.js'][46] = 0;
  _$jscoverage['advanced-require.js'][48] = 0;
  _$jscoverage['advanced-require.js'][59] = 0;
  _$jscoverage['advanced-require.js'][60] = 0;
  _$jscoverage['advanced-require.js'][62] = 0;
  _$jscoverage['advanced-require.js'][64] = 0;
  _$jscoverage['advanced-require.js'][67] = 0;
  _$jscoverage['advanced-require.js'][68] = 0;
  _$jscoverage['advanced-require.js'][70] = 0;
  _$jscoverage['advanced-require.js'][71] = 0;
  _$jscoverage['advanced-require.js'][76] = 0;
  _$jscoverage['advanced-require.js'][78] = 0;
  _$jscoverage['advanced-require.js'][79] = 0;
  _$jscoverage['advanced-require.js'][82] = 0;
  _$jscoverage['advanced-require.js'][88] = 0;
  _$jscoverage['advanced-require.js'][90] = 0;
  _$jscoverage['advanced-require.js'][91] = 0;
  _$jscoverage['advanced-require.js'][93] = 0;
  _$jscoverage['advanced-require.js'][94] = 0;
  _$jscoverage['advanced-require.js'][97] = 0;
  _$jscoverage['advanced-require.js'][98] = 0;
  _$jscoverage['advanced-require.js'][102] = 0;
  _$jscoverage['advanced-require.js'][103] = 0;
  _$jscoverage['advanced-require.js'][107] = 0;
  _$jscoverage['advanced-require.js'][108] = 0;
  _$jscoverage['advanced-require.js'][111] = 0;
  _$jscoverage['advanced-require.js'][113] = 0;
  _$jscoverage['advanced-require.js'][114] = 0;
  _$jscoverage['advanced-require.js'][120] = 0;
  _$jscoverage['advanced-require.js'][123] = 0;
  _$jscoverage['advanced-require.js'][124] = 0;
  _$jscoverage['advanced-require.js'][127] = 0;
  _$jscoverage['advanced-require.js'][128] = 0;
  _$jscoverage['advanced-require.js'][130] = 0;
  _$jscoverage['advanced-require.js'][131] = 0;
  _$jscoverage['advanced-require.js'][132] = 0;
  _$jscoverage['advanced-require.js'][134] = 0;
  _$jscoverage['advanced-require.js'][136] = 0;
  _$jscoverage['advanced-require.js'][138] = 0;
  _$jscoverage['advanced-require.js'][141] = 0;
  _$jscoverage['advanced-require.js'][142] = 0;
  _$jscoverage['advanced-require.js'][147] = 0;
  _$jscoverage['advanced-require.js'][151] = 0;
  _$jscoverage['advanced-require.js'][152] = 0;
  _$jscoverage['advanced-require.js'][155] = 0;
  _$jscoverage['advanced-require.js'][157] = 0;
  _$jscoverage['advanced-require.js'][158] = 0;
  _$jscoverage['advanced-require.js'][161] = 0;
  _$jscoverage['advanced-require.js'][162] = 0;
  _$jscoverage['advanced-require.js'][164] = 0;
  _$jscoverage['advanced-require.js'][166] = 0;
  _$jscoverage['advanced-require.js'][168] = 0;
  _$jscoverage['advanced-require.js'][170] = 0;
  _$jscoverage['advanced-require.js'][171] = 0;
  _$jscoverage['advanced-require.js'][176] = 0;
  _$jscoverage['advanced-require.js'][177] = 0;
  _$jscoverage['advanced-require.js'][181] = 0;
  _$jscoverage['advanced-require.js'][182] = 0;
  _$jscoverage['advanced-require.js'][190] = 0;
  _$jscoverage['advanced-require.js'][192] = 0;
  _$jscoverage['advanced-require.js'][216] = 0;
}
_$jscoverage['advanced-require.js'][12]++;
require("abstract").createModel(module.exports = (function advancedRequire(model, prototype) {
  _$jscoverage['advanced-require.js'][14]++;
  advancedRequire.require("util");
  _$jscoverage['advanced-require.js'][17]++;
  advancedRequire.set("create_method", "load");
  _$jscoverage['advanced-require.js'][20]++;
  advancedRequire.defineProperties(model, {modules: (function modules(dir, opts) {
  _$jscoverage['advanced-require.js'][22]++;
  return model.load(dir, opts);
}), files: (function files() {
  _$jscoverage['advanced-require.js'][25]++;
  return model.load(dir, opts);
}), monitor: (function monitor() {
  _$jscoverage['advanced-require.js'][28]++;
  return model.load(dir, opts);
}), watchTree: (function watchTree(root, options, callback) {
  _$jscoverage['advanced-require.js'][31]++;
  return require("watch").watchTree(root, options, callback);
}), createMonitor: (function createMonitor(root, options, callback) {
  _$jscoverage['advanced-require.js'][34]++;
  return require("watch").createMonitor(root, options, callback);
})});
  _$jscoverage['advanced-require.js'][38]++;
  advancedRequire.defineProperties(model.prototype, {});
  _$jscoverage['advanced-require.js'][43]++;
  model.defineConstructor((function load(dir, opts, depth) {
  _$jscoverage['advanced-require.js'][44]++;
  var Instance = this;
  _$jscoverage['advanced-require.js'][46]++;
  depth = depth + 1 || 0;
  _$jscoverage['advanced-require.js'][48]++;
  opts = advancedRequire._extend({"duplicates": false, "recurse": true, "ignoreDotFiles": true, "depth": 5, "ignore": [".svn", ".git", ".DS_Store"], "extensions": Object.keys(require.extensions), "logger": undefined}, opts);
  _$jscoverage['advanced-require.js'][59]++;
  opts.extensions = typeof opts.extensions === "string"? [opts.extensions]: opts.extensions;
  _$jscoverage['advanced-require.js'][60]++;
  opts.ignore = typeof opts.ignore === "string"? [opts.ignore]: opts.ignore;
  _$jscoverage['advanced-require.js'][62]++;
  var files = [];
  _$jscoverage['advanced-require.js'][64]++;
  try {
    _$jscoverage['advanced-require.js'][67]++;
    dir = require("path").resolve(dir);
    _$jscoverage['advanced-require.js'][68]++;
    files = require("fs").readdirSync(dir);
    _$jscoverage['advanced-require.js'][70]++;
    if (! files.length) {
      _$jscoverage['advanced-require.js'][71]++;
      throw new Error("No files found.");
    }
  }
  catch (error) {
    _$jscoverage['advanced-require.js'][76]++;
    if (error.code === "ENOENT") {
      _$jscoverage['advanced-require.js'][78]++;
      if (opts.logger && opts.logger.error) {
        _$jscoverage['advanced-require.js'][79]++;
        opts.logger.error(error.message);
      }
      _$jscoverage['advanced-require.js'][82]++;
      return;
    }
  }
  _$jscoverage['advanced-require.js'][88]++;
  var filesForBase = {};
  _$jscoverage['advanced-require.js'][90]++;
  for (var i = 0; i < files.length; i++) {
    _$jscoverage['advanced-require.js'][91]++;
    var file = files[i];
    _$jscoverage['advanced-require.js'][93]++;
    var ext = require("path").extname(file);
    _$jscoverage['advanced-require.js'][94]++;
    var base = require("path").basename(file, ext);
    _$jscoverage['advanced-require.js'][97]++;
    if (ext && opts.extensions.indexOf(ext) < 0) {
      _$jscoverage['advanced-require.js'][98]++;
      continue;
    }
    _$jscoverage['advanced-require.js'][102]++;
    if (base && opts.ignore.indexOf(base) > -1) {
      _$jscoverage['advanced-require.js'][103]++;
      continue;
    }
    _$jscoverage['advanced-require.js'][107]++;
    if (opts.ignoreDotFiles && require("path").basename(base)[0] === ".") {
      _$jscoverage['advanced-require.js'][108]++;
      continue;
    }
    _$jscoverage['advanced-require.js'][111]++;
    filesForBase[base] = filesForBase[base] || [];
    _$jscoverage['advanced-require.js'][113]++;
    if (filesForBase[base].push) {
      _$jscoverage['advanced-require.js'][114]++;
      filesForBase[base].push(file);
    }
}
  _$jscoverage['advanced-require.js'][120]++;
  for (var base in filesForBase) {
    _$jscoverage['advanced-require.js'][123]++;
    if (! filesForBase.hasOwnProperty(base)) {
      _$jscoverage['advanced-require.js'][124]++;
      continue;
    }
    _$jscoverage['advanced-require.js'][127]++;
    var files = filesForBase[base];
    _$jscoverage['advanced-require.js'][128]++;
    var filesMinusDirs = {};
    _$jscoverage['advanced-require.js'][130]++;
    for (var i = 0; i < files.length; i++) {
      _$jscoverage['advanced-require.js'][131]++;
      var file = files[i];
      _$jscoverage['advanced-require.js'][132]++;
      var path = require("path").resolve(dir, file);
      _$jscoverage['advanced-require.js'][134]++;
      if (require("fs").statSync(path).isDirectory()) {
        _$jscoverage['advanced-require.js'][136]++;
        if (opts.recurse && opts.depth >= depth) {
          _$jscoverage['advanced-require.js'][138]++;
          Instance[base] = model.load(path, opts, depth);
          _$jscoverage['advanced-require.js'][141]++;
          if (opts.duplicates) {
            _$jscoverage['advanced-require.js'][142]++;
            Instance[file] = Instance[base];
          }
        }
      }
      else {
        _$jscoverage['advanced-require.js'][147]++;
        filesMinusDirs[file] = path;
      }
}
    _$jscoverage['advanced-require.js'][151]++;
    if (Instance[base] && ! opts.duplicates) {
      _$jscoverage['advanced-require.js'][152]++;
      continue;
    }
    _$jscoverage['advanced-require.js'][155]++;
    opts.extensions.forEach((function (ext) {
  _$jscoverage['advanced-require.js'][157]++;
  if (! require.extensions.hasOwnProperty(ext)) {
    _$jscoverage['advanced-require.js'][158]++;
    return;
  }
  _$jscoverage['advanced-require.js'][161]++;
  var file = base + ext;
  _$jscoverage['advanced-require.js'][162]++;
  var path = filesMinusDirs[file];
  _$jscoverage['advanced-require.js'][164]++;
  if (path) {
    _$jscoverage['advanced-require.js'][166]++;
    if (opts.duplicates) {
      _$jscoverage['advanced-require.js'][168]++;
      Instance[file] = require(path);
      _$jscoverage['advanced-require.js'][170]++;
      if (! Instance[base]) {
        _$jscoverage['advanced-require.js'][171]++;
        Instance[base] = Instance[file];
      }
    }
    else {
      _$jscoverage['advanced-require.js'][176]++;
      try {
        _$jscoverage['advanced-require.js'][177]++;
        Instance[base] = require(path);
      }
      catch (error) {
        _$jscoverage['advanced-require.js'][181]++;
        if (opts.logger && opts.logger.error) {
          _$jscoverage['advanced-require.js'][182]++;
          opts.logger.error(error, path);
        }
      }
    }
    _$jscoverage['advanced-require.js'][190]++;
    if (Instance[base]) {
      _$jscoverage['advanced-require.js'][192]++;
      Object.defineProperties(Instance[base], {"__path": {"enumerable": false, "writable": true, "configurable": true, "value": require.resolve(path)}, "__directory": {"enumerable": false, "configurable": true, "writable": true, "value": require("path").dirname(require.resolve(path))}});
    }
  }
}));
}
  _$jscoverage['advanced-require.js'][216]++;
  return Instance;
}));
}));
_$jscoverage['advanced-require.js'].source = ["/**"," * AdvancedRequire Module"," *"," * -"," *"," * @module advanced-require"," * @constructor"," * @author potanin@UD"," * @date 7/12/13"," * @type {Object}"," */","require( 'abstract' ).createModel( module.exports = function advancedRequire( model, prototype ) {","","  advancedRequire.require( 'util' );","","  // Configure module","  advancedRequire.set( 'create_method', 'load' );","","  // Properties: Constructor","  advancedRequire.defineProperties( model, {","    modules: function modules( dir, opts ) {","      return model.load( dir, opts );","    },","    files: function files() {","      return model.load( dir, opts );","    },","    monitor: function monitor() {","      return model.load( dir, opts );","    },","    watchTree: function watchTree( root, options, callback ) {","      return require( 'watch' ).watchTree( root, options, callback );","    },","    createMonitor: function createMonitor( root, options, callback ) {","      return require( 'watch' ).createMonitor( root, options, callback );","    },","  });","","  advancedRequire.defineProperties( model.prototype, {","    ","  });","","  // Instance Constructor","  model.defineConstructor( function load( dir, opts, depth ) {","    var Instance = this;","","    depth = depth + 1 || 0;","","    opts = advancedRequire._extend({","      'duplicates': false,","      'recurse': true,","      'ignoreDotFiles': true,","      'depth': 5,","      'ignore': [ '.svn', '.git', '.DS_Store' ],","      'extensions': Object.keys( require.extensions ),","      'logger': undefined","    }, opts );","","    // Ensure Extensions are Always in Array Form","    opts.extensions = typeof opts.extensions === 'string' ? [ opts.extensions ] : opts.extensions;","    opts.ignore = typeof opts.ignore === 'string' ? [ opts.ignore ] : opts.ignore;","","    var files = [];","","    try {","","      // resolve the path to an absolute one:","      dir = require( 'path' ).resolve( dir );","      files = require( 'fs' ).readdirSync( dir );","","      if( !files.length ) {","        throw new Error( 'No files found.' )","      }","","    } catch( error ) {","","      if( error.code === 'ENOENT' ) {","","        if( opts.logger &amp;&amp; opts.logger.error ) {","          opts.logger.error( error.message );","        }","","        return;","","      }","","    }","","    var filesForBase = {};","","    for( var i = 0; i &lt; files.length; i++ ) {","      var file = files[i];","","      var ext = require( 'path' ).extname( file );","      var base = require( 'path' ).basename( file, ext );","","      // Only Get Selected File Extensions","      if( ext &amp;&amp; opts.extensions.indexOf( ext ) &lt; 0 ) {","        continue;","      }","","      // Explicitly Exclude Specific File Names","      if( base &amp;&amp; opts.ignore.indexOf( base ) &gt; -1 ) {","        continue;","      }","","      // Skip \"dot\" files","      if( opts.ignoreDotFiles &amp;&amp; require( 'path' ).basename( base )[0] === '.' ) {","        continue;","      }","","      filesForBase[base] = filesForBase[base] || [];","","      if( filesForBase[base].push ) {","        filesForBase[base].push( file );","","      }","","    }","","    for( var base in filesForBase ) {","","      // protect against enumerable object prototype extensions:","      if( !filesForBase.hasOwnProperty( base ) ) {","        continue;","      }","","      var files = filesForBase[base];","      var filesMinusDirs = {};","","      for( var i = 0; i &lt; files.length; i++ ) {","        var file = files[i];","        var path = require( 'path' ).resolve( dir, file );","","        if( require( 'fs' ).statSync( path ).isDirectory() ) {","","          if( opts.recurse &amp;&amp; opts.depth &gt;= depth ) {","","            Instance[base] = model.load( path, opts, depth );","","            // if duplicates are wanted, key off the full name too:","            if( opts.duplicates ) {","              Instance[file] = Instance[base];","            }","          }","","        } else {","          filesMinusDirs[file] = path;","        }","      }","","      if( Instance[base] &amp;&amp; !opts.duplicates ) {","        continue;","      }","","      opts.extensions.forEach( function( ext ) {","","        if( !require.extensions.hasOwnProperty( ext ) ) {","          return;","        }","","        var file = base + ext;","        var path = filesMinusDirs[file];","","        if( path ) {","","          if( opts.duplicates ) {","","            Instance[file] = require( path );","","            if( !Instance[base] ) {","              Instance[base] = Instance[file];","            }","","          } else {","","            try {","              Instance[base] = require( path );","","            } catch ( error ) {","","              if( opts.logger &amp;&amp; opts.logger.error ) {","                opts.logger.error( error, path )","              }","","            }","","","          }","","          if( Instance[base] ) {","","            Object.defineProperties( Instance[base], {","              '__path': {","                'enumerable': false,","                'writable': true,","                'configurable': true,","                'value': require.resolve( path )","              },","              '__directory': {","                'enumerable': false,","                'configurable': true,","                'writable': true,","                'value': require( 'path' ).dirname( require.resolve( path ) )","              }","            });","","","          }","","        }","","      });","","    }","","    return Instance;","","  });","  ","});",""];
